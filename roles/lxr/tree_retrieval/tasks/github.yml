--- # file: roles/lxr/tree_retrieval/tasks/github.yml

# Clone/update the remote repo to local and checkout by a specific tag

# Assumed remote_user: {{ lxr_user }}

# Required vars:
#   source_tree_url:     the url of the remote repository to checkout
#   lxr_source_repo_dir: the directory to store the "bare" copy at local
#   lxr_tree_name:       the directory name to store the final source tree
#
# remote: http://github/sample/proj.git
#                                | clone
#                                v
# local: /path/to/source_repo/proj_name.git (bare)
#                                        | checkout
#                                        v
# local: /path/to/source_repo/proj_name/v1.0.1/ (a specific version)

- name: determine the source tree directories
  set_fact:
    bare_repo: '{{ lxr_source_repo_dir ~"/"~ lxr_tree_name ~".git" }}'
    dest_repo: '{{ lxr_source_repo_dir ~"/"~ lxr_tree_name ~"/"~ lxr_tag_name }}'
- name: clone/update the local repository
  git: repo={{ source_tree_url }} remote={{ source_tree_url }}
       dest={{ bare_repo }} bare=yes
  register: clone_result
  ignore_errors: True

# As git module sporadically failes, a recovery task is provided.
- name: clone/update the local repository (retry)
  git: repo={{ source_tree_url }} remote={{ source_tree_url }}
       dest={{ bare_repo }} bare=yes
  when: clone_result | failed

- name: checkout using lxr_tag_vcs
  git: repo={{ bare_repo }} version={{ lxr_tag_vcs }}
       dest={{ dest_repo }} depth=1
  register: rc
  ignore_errors: True

- name: clean the source tree that seems broken
  file: path={{ dest_repo }} state=absent
  when: rc | failed

- name: checkout using lxr_tag_vcs (try again)
  git: repo={{ bare_repo }} version={{ lxr_tag_vcs }}
       dest={{ dest_repo }} depth=1
  when: rc | failed
